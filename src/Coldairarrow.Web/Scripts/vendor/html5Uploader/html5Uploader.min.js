(function (b) { b.extend(window, { "Html5Uploader": a }); function a(o, e) { var n = { imgs: [], enableScale: true, asyncUpload: false, uploadUrl: null, maxHeight: 800, maxWidth: 800, uploadLimit: 5, sizeLimit: 5, postData: null }; var p = ['<li class="up-pic">', '<div class="up-clip">', '<img src="" style="display:block;" />', "</div>", '<div class="up-mask"></div>', '<div class="up-progress">', '<div class="pos"></div>', "</div>", '<a class="up-del" href="javascript:void(0)" title="关闭">&nbsp;</a>', "</li>"].join(""); var s, h, d; var i, v = 0, l; function t() { e = b.extend({}, n, e); s = b(o).addClass("up-container"); if (!s.length) { return } h = s.find("ul.up-pics"); if (!h.length) { h = b('<ul class="up-pics"></ul>').appendTo(s) } d = b('<input type="file" class="up-file" accept="image/*" />').appendTo(s); if (e.uploadLimit > 1) { d.attr("multiple", "multiple") } d.wrap('<div class="up-entry"></div>').change(function () { if (!this.files || !this.files.length) { return } l = Math.random(); i = this.files; v = i.length; k(0) }); h.on("tap", "a.up-del", function () { b(this).closest("li.up-pic").remove(); j() }); h.on("click", "a.up-del", function () { b(this).closest("li.up-pic").remove(); j() }); j(); var x = []; if (e.imgs) { var w = getType(e.imgs); switch (w) { case "string": x = e.imgs.split(","); break; case "array": x = e.imgs; break; default: break } } x.forEach(function (y) { m(y) }) } function k(w) { if (w >= i.length) { d.val(""); return } f(i[w], function () { k(++w) }) } function f(B, z) { if (!B.type.match(/image.*/)) { alert("只能选择图片文件."); v--; if (z) { z.call() } return } if (B.size > e.sizeLimit * 1024 * 1024) { alert("图片最大不能超过" + e.sizeLimit + "M."); v--; if (z) { z.call() } return } if (c()) { alert("最多只能上传" + e.uploadLimit + "个文件."); v = e.uploadLimit; if (z) { z.call() } return } var y = null; if (e.enableScale) { EXIF.getData(B, function () { EXIF.getAllTags(this); y = EXIF.getTag(this, "Orientation") }) } var D = B.name, C = b(p).appendTo(h); function w() { var E = new FileReader(); E.onloadend = function () { if (E.error) { alert("文件获取失败！"); C.remove(); if (z) { z.call() } return } var F = E.result; C.find("img").attr({ "src": F, "onload": u }); if (e.enableScale) { x(F) } else { A(F) } }; E.readAsDataURL(B) } function x(F) { var E = new Image(); E.onload = function () { var L = this.naturalWidth, H = this.naturalHeight; var J = document.createElement("canvas"); var G = J.getContext("2d"); J.width = L; J.height = H; G.drawImage(this, 0, 0, L, H); var I = null; if (navigator.userAgent.match(/iphone/i)) { if (y != "" && y != 1) { switch (y) { case 6: g(this, "right", J); break; case 8: g(this, "left", J); break; case 3: g(this, "left", J); g(this, "left", J); break } } I = J.toDataURL("image/jpeg", 0.9) } else { if (navigator.userAgent.match(/Android/i) && !true) { var K = new JPEGEncoder(); I = K.encode(G.getImageData(0, 0, expectWidth, expectHeight), 80) } else { if (y != "" && y != 1) { switch (y) { case 6: g(this, "right", J); break; case 8: g(this, "left", J); break; case 3: g(this, "left", J); g(this, "left", J); break } } I = J.toDataURL("image/jpeg", 0.9) } } A(I) }; E.src = F } function A(F) { if (e.asyncUpload && e.uploadUrl) { var E = b.extend(e.postData, { fileName: D, data: F, count: v, uploadVerNo: l }); b.post(e.uploadUrl, E, function (G) { if (!G.success) { alert(G.message); C.remove(); if (z) { z.call() } return } C.find("img").attr({ "src": G.src, "onload": u }); C.find(".pos").animate({ width: "100%" }, 0, "linear", function () { C.addClass("up-over"); j(); if (z) { z.call() } }) }, "json") } else { C.find("img").attr({ "src": F, "onload": u }); C.find(".pos").animate({ width: "100%" }, 500, "linear", function () { C.addClass("up-over"); j(); if (z) { z.call() } }) } } w() } function g(B, C, y) { if (B == null) { return } var w = 0, D = 3, z = 2, E = B.height, x = B.width; if (C == "left") { z++; z > D && (z = w) } else { z--; z < w && (z = D) } var A = z * 90 * Math.PI / 180; var F = y.getContext("2d"); switch (z) { case 0: y.width = x; y.height = E; F.drawImage(B, 0, 0, x, E); break; case 1: y.width = E; y.height = x; F.rotate(A); F.drawImage(B, 0, -E, x, E); break; case 2: y.width = x; y.height = E; F.rotate(A); F.drawImage(B, -x, -E, x, E); break; case 3: y.width = E; y.height = x; F.rotate(A); F.drawImage(B, -x, 0, x, E); break } } function u() { var z = this.parentNode; if (z) { var y = this.offsetHeight - z.offsetHeight; var x = this.offsetWidth - z.offsetWidth; 0 > y && (this.style.width = "auto", this.style.height = "100%"); 0 > x && (this.style.height = "auto", this.style.width = "100%") } } function j() { if (c()) { d.parent().hide() } else { d.parent().show() } } function c() { return e.uploadLimit > 0 && h.children().length >= e.uploadLimit } function r() { var w = []; h.find(".up-over img").each(function () { w.push(b(this).attr("src")) }); return w } function m(x) { var w = b(p).appendTo(h); w.addClass("up-over"); w.find("img").attr({ "src": x, "onload": u }); j() } function q() { h.empty() } return t(), { "getUploadFiles": r, "insertItem": m, "clear": q } } })(jQuery);